// Code generated by protoc-gen-go. DO NOT EDIT.
// source: interop/telemetry.proto

package interop

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Telemetry struct {
	Latitude    float32 `protobuf:"fixed32,1,opt,name=latitude" json:"latitude,omitempty"`
	Longitude   float32 `protobuf:"fixed32,2,opt,name=longitude" json:"longitude,omitempty"`
	AltitudeMsl float32 `protobuf:"fixed32,3,opt,name=altitude_msl,json=altitudeMsl" json:"altitude_msl,omitempty"`
	UasHeading  float32 `protobuf:"fixed32,4,opt,name=uas_heading,json=uasHeading" json:"uas_heading,omitempty"`
}

func (m *Telemetry) Reset()                    { *m = Telemetry{} }
func (m *Telemetry) String() string            { return proto.CompactTextString(m) }
func (*Telemetry) ProtoMessage()               {}
func (*Telemetry) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{0} }

func (m *Telemetry) GetLatitude() float32 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *Telemetry) GetLongitude() float32 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *Telemetry) GetAltitudeMsl() float32 {
	if m != nil {
		return m.AltitudeMsl
	}
	return 0
}

func (m *Telemetry) GetUasHeading() float32 {
	if m != nil {
		return m.UasHeading
	}
	return 0
}

func init() {
	proto.RegisterType((*Telemetry)(nil), "interop.Telemetry")
}

func init() { proto.RegisterFile("interop/telemetry.proto", fileDescriptor5) }

var fileDescriptor5 = []byte{
	// 149 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0xcf, 0xcc, 0x2b, 0x49,
	0x2d, 0xca, 0x2f, 0xd0, 0x2f, 0x49, 0xcd, 0x49, 0xcd, 0x4d, 0x2d, 0x29, 0xaa, 0xd4, 0x2b, 0x28,
	0xca, 0x2f, 0xc9, 0x17, 0x62, 0x87, 0x4a, 0x28, 0x75, 0x32, 0x72, 0x71, 0x86, 0xc0, 0x24, 0x85,
	0xa4, 0xb8, 0x38, 0x72, 0x12, 0x4b, 0x32, 0x4b, 0x4a, 0x53, 0x52, 0x25, 0x18, 0x15, 0x18, 0x35,
	0x98, 0x82, 0xe0, 0x7c, 0x21, 0x19, 0x2e, 0xce, 0x9c, 0xfc, 0xbc, 0x74, 0x88, 0x24, 0x13, 0x58,
	0x12, 0x21, 0x20, 0xa4, 0xc8, 0xc5, 0x93, 0x98, 0x03, 0x51, 0x19, 0x9f, 0x5b, 0x9c, 0x23, 0xc1,
	0x0c, 0x56, 0xc0, 0x0d, 0x13, 0xf3, 0x2d, 0xce, 0x11, 0x92, 0xe7, 0xe2, 0x2e, 0x4d, 0x2c, 0x8e,
	0xcf, 0x48, 0x4d, 0x4c, 0xc9, 0xcc, 0x4b, 0x97, 0x60, 0x01, 0xab, 0xe0, 0x2a, 0x4d, 0x2c, 0xf6,
	0x80, 0x88, 0x24, 0xb1, 0x81, 0xdd, 0x66, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x02, 0xb8, 0x6e,
	0xa8, 0xb6, 0x00, 0x00, 0x00,
}
