// Code generated by protoc-gen-go. DO NOT EDIT.
// source: interop/mission.proto

package interop

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type MissionList struct {
	Missions []*Mission `protobuf:"bytes,1,rep,name=missions" json:"missions,omitempty"`
}

func (m *MissionList) Reset()                    { *m = MissionList{} }
func (m *MissionList) String() string            { return proto.CompactTextString(m) }
func (*MissionList) ProtoMessage()               {}
func (*MissionList) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *MissionList) GetMissions() []*Mission {
	if m != nil {
		return m.Missions
	}
	return nil
}

type Mission struct {
	Id                   uint32      `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Active               bool        `protobuf:"varint,2,opt,name=active" json:"active,omitempty"`
	AirDropPos           *GPS        `protobuf:"bytes,3,opt,name=air_drop_pos,json=airDropPos" json:"air_drop_pos,omitempty"`
	HomePos              *GPS        `protobuf:"bytes,4,opt,name=home_pos,json=homePos" json:"home_pos,omitempty"`
	OffAxisOdlcPos       *GPS        `protobuf:"bytes,5,opt,name=off_axis_odlc_pos,json=offAxisOdlcPos" json:"off_axis_odlc_pos,omitempty"`
	EmergentLastKnownPos *GPS        `protobuf:"bytes,6,opt,name=emergent_last_known_pos,json=emergentLastKnownPos" json:"emergent_last_known_pos,omitempty"`
	FlyZones             []*FlyZone  `protobuf:"bytes,7,rep,name=fly_zones,json=flyZones" json:"fly_zones,omitempty"`
	MissionWaypoints     []*Waypoint `protobuf:"bytes,8,rep,name=mission_waypoints,json=missionWaypoints" json:"mission_waypoints,omitempty"`
	SearchGridPoints     []*Waypoint `protobuf:"bytes,9,rep,name=search_grid_points,json=searchGridPoints" json:"search_grid_points,omitempty"`
}

func (m *Mission) Reset()                    { *m = Mission{} }
func (m *Mission) String() string            { return proto.CompactTextString(m) }
func (*Mission) ProtoMessage()               {}
func (*Mission) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *Mission) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Mission) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

func (m *Mission) GetAirDropPos() *GPS {
	if m != nil {
		return m.AirDropPos
	}
	return nil
}

func (m *Mission) GetHomePos() *GPS {
	if m != nil {
		return m.HomePos
	}
	return nil
}

func (m *Mission) GetOffAxisOdlcPos() *GPS {
	if m != nil {
		return m.OffAxisOdlcPos
	}
	return nil
}

func (m *Mission) GetEmergentLastKnownPos() *GPS {
	if m != nil {
		return m.EmergentLastKnownPos
	}
	return nil
}

func (m *Mission) GetFlyZones() []*FlyZone {
	if m != nil {
		return m.FlyZones
	}
	return nil
}

func (m *Mission) GetMissionWaypoints() []*Waypoint {
	if m != nil {
		return m.MissionWaypoints
	}
	return nil
}

func (m *Mission) GetSearchGridPoints() []*Waypoint {
	if m != nil {
		return m.SearchGridPoints
	}
	return nil
}

type GPS struct {
	Latitude  float32 `protobuf:"fixed32,1,opt,name=latitude" json:"latitude,omitempty"`
	Longitude float32 `protobuf:"fixed32,2,opt,name=longitude" json:"longitude,omitempty"`
}

func (m *GPS) Reset()                    { *m = GPS{} }
func (m *GPS) String() string            { return proto.CompactTextString(m) }
func (*GPS) ProtoMessage()               {}
func (*GPS) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *GPS) GetLatitude() float32 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *GPS) GetLongitude() float32 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

type Waypoint struct {
	Order       uint32  `protobuf:"varint,1,opt,name=order" json:"order,omitempty"`
	Latitude    float32 `protobuf:"fixed32,2,opt,name=latitude" json:"latitude,omitempty"`
	Longitude   float32 `protobuf:"fixed32,3,opt,name=longitude" json:"longitude,omitempty"`
	AltitudeMsl float32 `protobuf:"fixed32,4,opt,name=altitude_msl,json=altitudeMsl" json:"altitude_msl,omitempty"`
}

func (m *Waypoint) Reset()                    { *m = Waypoint{} }
func (m *Waypoint) String() string            { return proto.CompactTextString(m) }
func (*Waypoint) ProtoMessage()               {}
func (*Waypoint) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *Waypoint) GetOrder() uint32 {
	if m != nil {
		return m.Order
	}
	return 0
}

func (m *Waypoint) GetLatitude() float32 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *Waypoint) GetLongitude() float32 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *Waypoint) GetAltitudeMsl() float32 {
	if m != nil {
		return m.AltitudeMsl
	}
	return 0
}

type FlyZone struct {
	AltitudeMslMin float32     `protobuf:"fixed32,1,opt,name=altitude_msl_min,json=altitudeMslMin" json:"altitude_msl_min,omitempty"`
	AltitudeMslMax float32     `protobuf:"fixed32,2,opt,name=altitude_msl_max,json=altitudeMslMax" json:"altitude_msl_max,omitempty"`
	BoundaryPts    []*Waypoint `protobuf:"bytes,3,rep,name=boundary_pts,json=boundaryPts" json:"boundary_pts,omitempty"`
}

func (m *FlyZone) Reset()                    { *m = FlyZone{} }
func (m *FlyZone) String() string            { return proto.CompactTextString(m) }
func (*FlyZone) ProtoMessage()               {}
func (*FlyZone) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *FlyZone) GetAltitudeMslMin() float32 {
	if m != nil {
		return m.AltitudeMslMin
	}
	return 0
}

func (m *FlyZone) GetAltitudeMslMax() float32 {
	if m != nil {
		return m.AltitudeMslMax
	}
	return 0
}

func (m *FlyZone) GetBoundaryPts() []*Waypoint {
	if m != nil {
		return m.BoundaryPts
	}
	return nil
}

func init() {
	proto.RegisterType((*MissionList)(nil), "interop.MissionList")
	proto.RegisterType((*Mission)(nil), "interop.Mission")
	proto.RegisterType((*GPS)(nil), "interop.GPS")
	proto.RegisterType((*Waypoint)(nil), "interop.Waypoint")
	proto.RegisterType((*FlyZone)(nil), "interop.FlyZone")
}

func init() { proto.RegisterFile("interop/mission.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 468 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x93, 0x41, 0x6f, 0xd3, 0x30,
	0x1c, 0xc5, 0x95, 0x84, 0x35, 0xe9, 0x3f, 0xa5, 0x6a, 0xad, 0x01, 0x11, 0xe2, 0x50, 0x72, 0x21,
	0x07, 0x28, 0xd2, 0x40, 0xe2, 0x80, 0xc4, 0x84, 0x40, 0xf4, 0xc0, 0x2a, 0xa2, 0xec, 0x80, 0xc4,
	0xc5, 0xf2, 0x6a, 0xa7, 0xb3, 0x70, 0xec, 0xc8, 0xf6, 0x58, 0x8b, 0xc4, 0xa7, 0xe0, 0xcb, 0xf0,
	0xf1, 0x50, 0x12, 0xa7, 0x6c, 0xa3, 0xdb, 0x2d, 0x7e, 0xef, 0xf7, 0x5e, 0x92, 0xff, 0x3f, 0x81,
	0x07, 0x5c, 0x5a, 0xa6, 0x55, 0xfd, 0xb2, 0xe2, 0xc6, 0x70, 0x25, 0xe7, 0xb5, 0x56, 0x56, 0xa1,
	0xd0, 0xc9, 0xe9, 0x5b, 0x88, 0x97, 0x9d, 0x73, 0xc2, 0x8d, 0x45, 0xcf, 0x21, 0x72, 0xa0, 0x49,
	0xbc, 0x59, 0x90, 0xc5, 0x47, 0x93, 0xb9, 0x43, 0xe7, 0x8e, 0x2b, 0x76, 0x44, 0xfa, 0x27, 0x80,
	0xd0, 0xa9, 0x68, 0x0c, 0x3e, 0xa7, 0x89, 0x37, 0xf3, 0xb2, 0xfb, 0x85, 0xcf, 0x29, 0x7a, 0x08,
	0x03, 0xb2, 0xb2, 0xfc, 0x07, 0x4b, 0xfc, 0x99, 0x97, 0x45, 0x85, 0x3b, 0xa1, 0x39, 0x8c, 0x08,
	0xd7, 0x98, 0x6a, 0x55, 0xe3, 0x5a, 0x99, 0x24, 0x98, 0x79, 0x59, 0x7c, 0x34, 0xda, 0xdd, 0x65,
	0x91, 0x9f, 0x16, 0x40, 0xb8, 0xfe, 0xa8, 0x55, 0x9d, 0x2b, 0x83, 0x9e, 0x41, 0x74, 0xae, 0x2a,
	0xd6, 0xb2, 0xf7, 0xf6, 0xb0, 0x61, 0xe3, 0x36, 0xe0, 0x1b, 0x98, 0xaa, 0xb2, 0xc4, 0x64, 0xc3,
	0x0d, 0x56, 0x54, 0xac, 0xda, 0xc4, 0xc1, 0x9e, 0xc4, 0x58, 0x95, 0xe5, 0xfb, 0x0d, 0x37, 0x5f,
	0xa8, 0x58, 0x35, 0xc1, 0x0f, 0xf0, 0x88, 0x55, 0x4c, 0xaf, 0x99, 0xb4, 0x58, 0x10, 0x63, 0xf1,
	0x77, 0xa9, 0x2e, 0x65, 0x1b, 0x1f, 0xec, 0x89, 0x1f, 0xf6, 0xf0, 0x09, 0x31, 0xf6, 0x73, 0x83,
	0x36, 0x25, 0x2f, 0x60, 0x58, 0x8a, 0x2d, 0xfe, 0xa9, 0x24, 0x33, 0x49, 0x78, 0x63, 0x72, 0x9f,
	0xc4, 0xf6, 0x9b, 0x92, 0xac, 0x88, 0xca, 0xee, 0xc2, 0xa0, 0x77, 0x30, 0x75, 0x53, 0xc4, 0x97,
	0x64, 0x5b, 0x2b, 0x2e, 0xad, 0x49, 0xa2, 0x36, 0x36, 0xdd, 0xc5, 0xbe, 0x3a, 0xa7, 0x98, 0x38,
	0xb6, 0x17, 0x0c, 0x3a, 0x06, 0x64, 0x18, 0xd1, 0xab, 0x73, 0xbc, 0xd6, 0x9c, 0x62, 0x57, 0x30,
	0xbc, 0xb5, 0xa0, 0x83, 0x17, 0x9a, 0xd3, 0xbc, 0x45, 0xd3, 0x63, 0x08, 0x16, 0xf9, 0x29, 0x7a,
	0x0c, 0x91, 0x20, 0x96, 0xdb, 0x0b, 0xca, 0xda, 0xdd, 0xf9, 0xc5, 0xee, 0x8c, 0x9e, 0xc0, 0x50,
	0x28, 0xb9, 0xee, 0x4c, 0xbf, 0x35, 0xff, 0x09, 0xe9, 0x2f, 0x88, 0xfa, 0x7a, 0x74, 0x08, 0x07,
	0x4a, 0x53, 0xa6, 0xdd, 0xfa, 0xbb, 0xc3, 0xb5, 0x6e, 0xff, 0xae, 0xee, 0xe0, 0x46, 0x37, 0x7a,
	0x0a, 0x23, 0x22, 0x3a, 0x12, 0x57, 0x46, 0xb4, 0x7b, 0xf7, 0x8b, 0xb8, 0xd7, 0x96, 0x46, 0xa4,
	0xbf, 0x3d, 0x08, 0xdd, 0x58, 0x51, 0x06, 0x93, 0xab, 0x38, 0xae, 0xb8, 0x74, 0x2f, 0x33, 0xbe,
	0x12, 0x59, 0x72, 0xf9, 0x3f, 0x49, 0x36, 0xee, 0xd1, 0xae, 0x91, 0x64, 0x83, 0x5e, 0xc3, 0xe8,
	0x4c, 0x5d, 0x48, 0x4a, 0xf4, 0x16, 0xd7, 0xb6, 0xf9, 0x4c, 0x6f, 0x19, 0x6d, 0xdc, 0x63, 0xb9,
	0x35, 0x67, 0x83, 0xf6, 0xef, 0x7a, 0xf5, 0x37, 0x00, 0x00, 0xff, 0xff, 0xd6, 0x68, 0x6a, 0x2b,
	0x76, 0x03, 0x00, 0x00,
}
