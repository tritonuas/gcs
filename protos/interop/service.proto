syntax = "proto3";
package interop;

import "google/api/annotations.proto";
import "interop/mission.proto";
import "interop/mission_edit.proto";
import "interop/mission_report.proto";
import "interop/obstacles.proto";
import "google/protobuf/empty.proto";

service Simulation {
    rpc StartInteropServer(MissionName) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            get: "/v1/simulation/interop/start"
        };
    }

    rpc StopInteropServer(MissionName) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            get: "/v1/simulation/interop/stop"
        };
    }

    rpc StartSITL(MissionName) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            get: "/v1/simulation/start"
        };
    }

    rpc StopSITL(MissionName) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            get: "/v1/simulation/stop"
        };
    }
}

// Defines endpoints that interact with the interop server
service Interop {
    // Get active mission
    rpc GetActiveMission(google.protobuf.Empty) returns (Mission) {
        option (google.api.http) = {
            get: "/v1/interop/mission"
        };
    }

    rpc Status(google.protobuf.Empty) returns (MissionReportStatus) {
        option (google.api.http) = {
            get: "/v1/interop/mission/status"
        };
    }

    rpc GetObstacles(google.protobuf.Empty) returns (Obstacles) {
        option (google.api.http) = {
            get: "/v1/interop/obstacles"
        };
    }

    rpc StartMission(google.protobuf.Empty) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            get: "/v1/interop/start"
        };
    }
}

service MissionEdit {
    rpc GetMissionList(google.protobuf.Empty) returns (MissionNameList) {
        option (google.api.http) = {
            get: "/v1/missionedit/mission_names"
        };
    }

    rpc GetMission(MissionName) returns (CompleteMission) {
        option (google.api.http) = {
            get: "/v1/missionedit/mission/{mission_name}"
        };
    }

    rpc PostMission(CompleteMission) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/v1/missionedit/mission/{mission_name}",
            body: "*"
        };
    }
}
